
@import "./core/transform"

borderSlim(borderWidth=1px,borderColor=#ccc,borderStyle=solid,radius=0) 
    //首先让父元素定位为相对定位
    //为伪元素的绝对定位创造条件
    position relative
    //给父元素加圆角
    //实现与伪元素纤细边框一样效果
    border-radius radius
    &::after 
        // 解决边框的layer 的遮罩问题
        pointer-events none 
        // 让伪元素变的定位相对父元素定位
        position absolute
        //层级增大
        z-index 999
        //定位父元素的左上角
        top 0
        left 0
        content '\0020'
        //给边框样式
        border-color borderColor 
        border-style borderStyle 
        border-width borderWidth
        // 媒体查询DPR 1
        @media screen and (max--moz-device-pixel-ratio: 1.49),(-webkit-max-device-pixel-ratio: 1.49),(max-device-pixel-ratio: 1.49),(max-resolution: 143dpi),(max-resolution: 1.49dppx)
            width  100%
            height 100%
            if radius>0
                border-radius:radius
        // 媒体查询DPR 2
        @media screen and (min--moz-device-pixel-ratio: 1.5) and  (max--moz-device-pixel-ratio: 2.49),(-webkit-min-device-pixel-ratio: 1.5) and  (-webkit-max-device-pixel-ratio: 2.49), (min-device-pixel-ratio: 1.5) and (max-device-pixel-ratio: 2.49),(min-resolution: 144dpi) and (max-resolution: 239dpi),(min-resolution: 1.5dppx) and (max-resolution: 2.49dppx)
            width 200%
            height 200%
            Scale(.5)
            if radius>0
                border-radius:radius*2
          // 媒体查询DPR 3
        @media screen and (min--moz-device-pixel-ratio: 2.5),(-webkit-min-device-pixel-ratio: 2.5),(min-device-pixel-ratio: 2.5),(min-resolution: 240dpi),(min-resolution: 2.5dppx)
            width 300%
            height 300%
            Scale(.333333333)
            if radius>0
                border-radius:radius*3
        //从顶点开始缩放不要从中间
        transform-origin 0 0

            
      
     
      
      
        
            

            

      
      
      
      
        



      
      
      
      
        





